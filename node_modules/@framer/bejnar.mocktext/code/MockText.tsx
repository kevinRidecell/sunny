import * as React from "react";
import { Data, PropertyControls, ControlType } from "framer";

const data = Data({ 
    loremIpsum: `Lorem ipsum dolor sit amet, et mei ipsum molestie, cu illud minim commune eam. Quo case signiferumque eu. Ne everti moderatius ius, etiam assum ea quo. At eum wisi iracundia, probo blandit ut vis, habeo soluta tincidunt id cum. Qui no ipsum volutpat, meis epicuri ex mel. Eam nostrud urbanitas at. Ne dicta nullam salutatus eum, ne dolores fabellas nec. Cu illum inimicus mel. Ius elit eligendi vituperata ut. Facilis forensibus nam an, vix solet vocibus ei. Ei legere percipit sit. Sea fugit scribentur in, vim an inani propriae, has ea suas volumus. Et liber regione adversarium vis, ei odio libris consetetur sea. Id mei vero zril rationibus, no mea legimus constituto, mel everti accommodare eu. Te elit veniam nullam vis, sit aeque oblique ne, iisque appareat at sed. Est ne vivendo expetenda persecuti. Placerat mandamus te has, vis quando scriptorem et. Ignota consetetur accommodare ei his, mea eu ignota adipisci, vim eius percipit contentiones cu. Qui quem dolores platonem cu, usu tibique offendit ad, eum docendi insolens an. Mea elitr affert ut. Ad minimum referrentur eos, mel ea everti torquatos. In nulla recteque complectitur vis. No blandit noluisse cum, te exerci appellantur sea. Vix ne verterem vulputate.`,
})

const style: React.CSSProperties = {
    height: "100%",
    textAlign: "left",
    color: "#000000",
    fontSize: "16px",
    fontFamily: "Helvetica",
    lineHeight: 1,
    overflow: "hidden",
    whiteSpace: "pre-line",
}

// Define type of property
interface Props {
    text: string;
    textColor: string;
    length: number;
    lineHeight: number;
    font: string;
    textAlign: string;
    fontSize: number;
    fontWeight: number;
    customFont: string;
    align: object;
}


export class MockText extends React.Component<Props> {
    
    // Set default properties
    static defaultProps = {
        text: data.loremIpsum,
        length: data.loremIpsum.length,
        textColor:"#000000",
        fontSize: 16,
        align: "left",
        lineHeight: 1,
        font: "Helvetica",
        customFont: "",
        weight: 400,
    }

    // Items shown in property panel
    static propertyControls: PropertyControls = {
        text: { type: ControlType.String, title: "Text" },
        textColor: { type: ControlType.Color, title: "Color" },
        length: { 
            type: ControlType.Number, 
            title: "Characters",
            min: 0,
            max: data.loremIpsum.length,
            step: 1,
        },
        font: {
            type: ControlType.Enum,
            title: "Font",
            options: ["Helvetica", "Arial", "Times", "Georgia", "Courier", "Verdana", "Tahoma"],
        },
        customFont: { 
            type: ControlType.String, 
            title: "Custom Font" 
        },
        fontSize: { 
            type: ControlType.Number, 
            title: "Size",
            min: 0,
            max: 500,
            step: 1,
        },
        lineHeight: { 
            type: ControlType.Number, 
            title: "Line Height",
            min: 0,
            max: 10,
            step: 0.1,
        },
        weight: {
            type: ControlType.Number,
            title: "Weight",
            max: 900,
            min: 100,
            step: 100,
        },
        align: {
            type: ControlType.SegmentedEnum,
            title: "Align",
            options: ["left", "center", "right"],
        },
    }

    chooseFont = () => {
        if (this.props.customFont) {
            return this.props.customFont
        } else {
            return this.props.font
        }
    }
    
    render() {
        const currentText = data.loremIpsum
        let combinedStyle = {
            ...style,
            color: this.props.textColor,
            fontSize: this.props.fontSize,
            fontFamily: this.chooseFont(),
            fontWeight: this.props.weight,
            lineHeight: this.props.lineHeight,
            textAlign: this.props.align
        }
        let currentLength = this.props.length
        let trimmed = currentText.substring(0, currentLength)
        return <div style={combinedStyle}>{trimmed}</div>
    }
}
